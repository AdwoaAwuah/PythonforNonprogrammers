#creating integer variables
day = 29
print(day)

#floats
weight = 109.4
print(weight)

#basic calculation
print(3 + 6)

print(day + 3)

#strings
shirt = "blue"
store = "Nick's Pizza"

store = 'Nick\'s Pizza Shop, the "best" there is'

#using variables in strings
day = 25
month = 'October'
temp = -15
day_name = 'Wednesday'

#Adding f before the string allows you to use variables in the string
print(f"Today is {day_name} {month} {day} and it's {temp} degrees outside")

#Boolean
light_is_on = False

if light_is_on:
  print('The light is on!')
##
Green = False

if Green:
  print('The plant is green')
else:
  print('The plant is not green')

weight = 190.4

if weight < 194:
  print("You're under weight :)")

Age = 17

if Age >= 18:
  print("You're an Adult!")
else:
  print("You're still a baby!")


#Project 1

#Getting random data
import random

#produces random integers between 1 and 10
print(random.randint(1,10))

#random floats
print(random.random())

answer = random.randint(1, 3)

if answer == 1:

  print("yes")

if answer == 2:
   print("No")

if answer == 3:
  print("maybe")


##Project 2

lucky_number = random.randint(1,100)
print(lucky_number)

fortune_number = random.randint(1,3)
fortune_text = ''
if fortune_number == 1:
  fortune_text = 'You will have a great day!'
if fortune_number == 2:
  fortune_text = 'Today will be tough...but worth it!'
if fortune_number == 3:
  fortune_text = 'You will be successful!'


print(f'{fortune_text} Your Lucky Number is:  {lucky_number}')

#ListsStart
#create lists using square brackets
fav_char = [1,5,4,True,'Bag']
print(fav_char[1]) #index starts from 0

#finding the length of a list
print(len(fav_char))

#Adding another item to the end of a list
fav_char.append("Green")

#Adding an object to a particular index in a list
fav_char.insert(1,"Batman")

#Getting rid of an item in a list
del(fav_char[2])
print(fav_char)


#Project 4 For loops
for number in range(10):
  print("Hello")

for char in fav_char:
  print(char)

#exercise
for num in range(40):
  print((num+1)*2)#adding plus 1, gets rid of the zero and allows your list to start from 2

#Making dictionaries using curly brackets
cats={"Jane": 6, "Tom":8, "Jerry":14} #Jane is the key and the value is 6

#adding a key to the dictionary
cats["Wilson"]=1
del(cats["Tom"])

#to find the age of a particular cat
print(cats["Jane"])

#Creating a dictionary with ints for keys and booleans for values
boint ={1:True, 2:False}
print(boint[1])

# Python code below
# Use print("messages...") to debug your solution.

show_expected_result = True
show_hints = True


def your_code():

    numbers = [62, 66, 94, 97, 25, 11, 68, 54, 48, 67]
    total = 0

    # Your code goes here.
    for num in numbers:
      remainder = num%2

      if remainder == 0:

        total = total + num




    return total

#Word counter
text = """We found that both age groups adapted more to the abrupt condition compared to 
22 the gradual condition, which resulted in greater adaptation effects (i.e., aftereffects) on the 
23 treadmill in the abrupt than the gradual groups. We also found that older adults generalize more 
24 than young adults, regardless of the perturbation schedule (i.e., gradual or abrupt). Our results 
25 suggest that abrupt perturbations during adaptation do not limit the generalization of movement 
26 in older adults -perhaps because they are more likely to attribute them to their own faulty 
27 movements. These results suggest that large perturbations are better than small when training 
28 older clinical populations since abrupt disturbances would lead to more adaptation and 
29 generalization of corrected movements in older people. """

print(text)

print(len(text.split()))

#word count, counting the number of words in a list
text="""a b c a a b"""

print(text.split())
#print(text.lower.split()) make all your characters lowercase
word_count = {}

for word in text.split():
  if word in word_count:
    word_count[word] += 1
  else:
    word_count[word] = 1

print(word_count)




#Functions
def bark():
 print("Woof Woof")

bark()

def hello():
  print("Hello Nick!")

hello()

def hello(name):
  print(f"Hello {name}!")

hello("Sara")


def add_numbers(num1, num2):
  print(num1+num2)

add_numbers(3,4)

def dog_info(name,age):
  print(f"My dog is called {name} and they are {age} years old")

dog_info("James",2)


def txt(upptxt):
  return upptxt.upper()

newtext = txt("may")
print(newtext)

usertxt = input('Enter some text: ')
print(usertxt.upper())


user_num = input("What do you want to double?")

print(int(user_num)*2)

text1 = input("text: ")

newtxt = input('Enter 1 to uppercase and 2 to lowercase: ')

if newtxt == "1":
  print(text1.upper())

if newtxt == "2":
  print(text1.lower())


#Number guessing game
import time
print("Hi Welcome to the guessing game. Please guess a number between 1 and 100")
time.sleep(2)
guess = print("What is your guess?: ")
correct_number = random.randint(1,100)

guess_count = 0
guess = int(input(" What is your guess?: "))

while guess != correct_number:
  guess_count += 1

  if guess < correct_number:
    guess = int(input(" Guess higher, What is your guess?: "))
else:
   guess = int(input(" Guess lower, What is your guess?: "))
  
print(f" Congrats! You got the right answer {correct_number} It took you {guess_count} guesses.")
